<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microsoft 365 on Veni, Vidi, Vici</title>
    <link>https://juliemturner.net/tags/microsoft-365/</link>
    <description>Recent content in Microsoft 365 on Veni, Vidi, Vici</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>julie.turner@sympraxisconsulting.com (Julie Turner)</managingEditor>
    <webMaster>julie.turner@sympraxisconsulting.com (Julie Turner)</webMaster>
    <copyright>Julie Turner ~ All rights reserved</copyright>
    <lastBuildDate>Thu, 05 Jan 2023 21:22:00 +0000</lastBuildDate><atom:link href="https://juliemturner.net/tags/microsoft-365/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hTWOo-React 2.1.0 Spotlight: Dialogs</title>
      <link>https://juliemturner.net/post/htwoo-210-dialogs/</link>
      <pubDate>Fri, 01 Dec 2023 21:00:00 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/htwoo-210-dialogs/</guid>
      <description>We&amp;rsquo;ve just released the latest version of hTWOo-React, version 2.1. I&amp;rsquo;m going to be posting various updates highlighting some of the new updates over the next several weeks, so please check back or follow me on LinkedIn for more updates. For more information on hTWOo-React check out our documentation. For an overview of hTWOo please see this previous post or visit our hTWOo page.
Dialogs in SPFx just got EASY My absolute favorite update to hTWOo-Core 2.</description>
    </item>
    
    <item>
      <title>Console Log Better Practices with PnPjs V3</title>
      <link>https://juliemturner.net/post/better-practices-console-log-pnpjs/</link>
      <pubDate>Sat, 27 May 2023 09:51:56 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/better-practices-console-log-pnpjs/</guid>
      <description>I was recently asked by a conference attendee to help him understand when to use the @pnp/logging package that we ship with PnPjs.
This is an excellent question, and I&amp;rsquo;ve addressed it somewhat before in a previous post called Resolve to Log. All of the guidance I included about the package in that post still applies, however the examples references V2 of the library. To recap there is the ability to create a ConsoleLogger, a FunctionalLogger, or a custom listener class and then register that listener to the PnPjs timeline via the PnPLogging behavior.</description>
    </item>
    
    <item>
      <title>Intro to hTWOo-React: Microsoft Fluent UI React alternative</title>
      <link>https://juliemturner.net/post/intro-htwoo-react/</link>
      <pubDate>Mon, 06 Feb 2023 23:01:00 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/intro-htwoo-react/</guid>
      <description>Getting Stared with hTWOo-React presentation This PnP Community demo is taken from the Viva Connections &amp;amp; SharePoint Framework Bi-weekly sync call recorded on January 12, 2023.
I recently had the opportunity to present a &amp;ldquo;Getting Started with hTWOo React&amp;rdquo; session on the bi-weekly Viva Connections &amp;amp; SharePoint Framework call. I always love being able to present the fun stuff I&amp;rsquo;m working on to the rest of the community. For those of you who are not familiar, hTWOo is an open source alternative for Microsoft’s Fluent UI Web Design system.</description>
    </item>
    
    <item>
      <title>Getting Started with PnPjs</title>
      <link>https://juliemturner.net/post/getting-started-pnpjs/</link>
      <pubDate>Tue, 17 Jan 2023 15:08:31 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/getting-started-pnpjs/</guid>
      <description>This content has also been posted on Microsoft 365 Platform Community Blog.Introduction As a co-maintainer of the PnPjs library I know it can be difficult for those just starting out with the library. I wanted to introduce a blog post that goes into more depth about how to start your journey. Let&amp;rsquo;s drive right in.
What is PnPjs PnPjs is a collection of fluent libraries for consuming SharePoint, Graph, and Office 365 REST APIs.</description>
    </item>
    
    <item>
      <title>SharePoint App Catalog Development Tips</title>
      <link>https://juliemturner.net/post/sp-appcatalog-dev-tips/</link>
      <pubDate>Mon, 03 May 2021 18:39:33 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/sp-appcatalog-dev-tips/</guid>
      <description>After several years of building SharePoint Framework solutions on an almost daily basis you get to the point where you’ve managed to find some things that work pretty well. I recently started a new project and after sharing them with the team realized that maybe these tips would be useful to others and so thought to consolidate them into a list.
Change the default view for the tenant app catalog Probably not the oddest, but certainly in a top 10 oddest OOB settings in SharePoint, is the list view settings for the default view in the tenant app catalog for SharePoint apps which groups by Product ID.</description>
    </item>
    
    <item>
      <title>What is a &#39;Dev Tenant&#39; and why would you want one?</title>
      <link>https://juliemturner.net/post/dev-tenant/</link>
      <pubDate>Wed, 06 Jan 2021 15:53:37 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/dev-tenant/</guid>
      <description>This content has also been posted on Microsoft 365 Platform Community Blog.When someone says to you, they are using their “dev tenant” what they’re probably referring to is their personal development “sandbox” they received as part of joining the Microsoft 365 developer program.
By visiting Developer Program - Microsoft 365 and selecting “Join Now” you’ll be walked through a wizard that will help you provision your very own Microsoft 365 tenant.</description>
    </item>
    
    <item>
      <title>SharePoint Framework Application Customizer Cross-Site Page Loading</title>
      <link>https://juliemturner.net/post/spfx-appcustomizer-pageloading/</link>
      <pubDate>Thu, 05 Sep 2019 13:21:48 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/spfx-appcustomizer-pageloading/</guid>
      <description>I suspect, like Elio Struyf and Velin Georgiev before him, we&amp;rsquo;re all suffering from PTSD trying to properly load an application customizer into modern pages. It all started with an issue posted in the sp-dev-docs repo that was about partial page load across site collections but devolved into and issue with the OnInit function firing multiple times. Velin’s post describing his solution to the issue starts with a masterful breakdown of the page loading cycle and his need to track page hits.</description>
    </item>
    
    <item>
      <title>Using CSS Variables to Morph Your SPFx Design at Run Time</title>
      <link>https://juliemturner.net/post/using-css-variables/</link>
      <pubDate>Thu, 13 Jun 2019 16:16:33 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/using-css-variables/</guid>
      <description>I learned about CSS Variables from Stefan Bauer and his post CSS Variables support for SPFx projects through spfx-uifabric-themes. In a nutshell, this npm package, which I’ve started using regularly, transforms the current theme colors available to the SPFx web part into variables that can be used within your SCSS/CSS files. This intrigued me as it’s a native browser capability that&amp;rsquo;s been around since 2015 and because it means that you can affect the styling at run-time vs build-time… which translated means that lots of things you would normally think you’d need script for you can now do with a crafty use of CSS and some variables.</description>
    </item>
    
    <item>
      <title>Curate the News: Social Following Sites on behalf of a user</title>
      <link>https://juliemturner.net/post/curate-news-for-user/</link>
      <pubDate>Mon, 18 Feb 2019 13:51:20 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/curate-news-for-user/</guid>
      <description>Curate the News Social Following Sites on behalf of a user The impetus for this post was the desire to follow a site for a batch of users. Why? Well, the news that shows up on the SharePoint home page stems from news posted to sites you follow. So as an organization, especially a large one, if you want to somewhat curate what news gets pushed to your users you need to make sure they’re following the sites that have the news you want them to see.</description>
    </item>
    
    <item>
      <title>Resolve to Log</title>
      <link>https://juliemturner.net/post/resolve-to-log/</link>
      <pubDate>Mon, 31 Dec 2018 18:51:56 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/resolve-to-log/</guid>
      <description>This post has been updated in a more recent post Console Log Better Practices with PnPjs V3.My Sympraxis partner Marc Anderson mentioned that we’ve been talking about PnPJS packages for SharePoint Framework a lot lately and called out that I would be blogging about utilizing the logging package in his post Using PnPJS and Async/Await to Really Simplify Your API Calls. If you haven’t checked it out and aren’t using PnPJS and the Async/Await method instead of Promises in your SharePoint Framework solutions, you should give it a read.</description>
    </item>
    
    <item>
      <title>SPFx Anchor Tags - Hitting the Target</title>
      <link>https://juliemturner.net/post/spfx-anchor-tags/</link>
      <pubDate>Wed, 08 Aug 2018 18:17:18 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/spfx-anchor-tags/</guid>
      <description>If you’re developing SharePoint Framework web parts you may have run across an issue whereby your anchor tags will not honor the target=”_blank” attribute allowing you to open a url in a new browser tab. The issue manifests itself only when your goal is to open another SharePoint page from a SharePoint page, i.e. the href is in the SharePoint domain. The reason for this is SharePoint’s built in but rather complex Page Router.</description>
    </item>
    
    <item>
      <title>Tip: Implementing &#39;Nav&#39; Office Fabric UI React Component</title>
      <link>https://juliemturner.net/post/nav-officeui-fabric-component/</link>
      <pubDate>Tue, 31 Jul 2018 23:55:05 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/nav-officeui-fabric-component/</guid>
      <description>This post is meant to be a quick supplement to the documentation provided by Microsoft around the Nav component of the Fluent UI. This Nav component gives you a control that you either create URL links or maybe more commonly, support navigation via code. For general links, where the URL is either a route or some other page, the implementation of the INavLinkGroup[] and INavLink is quite straight forward, just provide a Key, Name, and URL with a couple other optional parameters.</description>
    </item>
    
    <item>
      <title>Managing the Unified Group in Office 365 for SharePoint and Beyond</title>
      <link>https://juliemturner.net/post/managing-unifed-group/</link>
      <pubDate>Tue, 10 Apr 2018 13:24:04 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/managing-unifed-group/</guid>
      <description>Introduction Azure Active Directory (AAD) Unified Groups, or better known as Office365 Groups, the security principal that underlies modern SharePoint team sites, Teams, Outlook Groups, Planner, etc. is a very powerful management construct that is the glue that holds the Office 365 security pyramid together. Basically, a Unified Group has both an Owners group and a Members group and by adding users (either users in your tenant or external users – with a Microsoft based work and school account or a personal account) you can create a construct that allows you to work across many of the vast product offerings in Office 365.</description>
    </item>
    
    <item>
      <title>Harvesting your SharePoint Site Collections</title>
      <link>https://juliemturner.net/post/harvesting-sharepoint-sites/</link>
      <pubDate>Tue, 20 Mar 2018 11:36:31 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/harvesting-sharepoint-sites/</guid>
      <description>One of the things I’ve been working on lately is harvesting a complete listing of all the site collections in a tenant, including as much metadata as possible. Some of the metadata I’m looking for revolves around adding governance to managing your catalog of sites, especially in a large tenant. For sure I think the SharePoint product group has visibility into the needs here but to get full fidelity might take significantly longer than you can wait.</description>
    </item>
    
    <item>
      <title>Azure Function Development-Deployment Strategy</title>
      <link>https://juliemturner.net/post/azure-function-development-deployment-strategy/</link>
      <pubDate>Tue, 05 Sep 2017 15:15:50 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/azure-function-development-deployment-strategy/</guid>
      <description>There will be some that find what I’m about to say entirely obvious. For those that don’t this is a great way to think about development when the terminology changes but really everything stayed the same. Azure Functions are billed as “serverless computing”, and as I’m sure most of you have figured out already, all this really means is that the Azure extrapolates the complexity of managing the hardware and infrastructure that allows your code to execute.</description>
    </item>
    
    <item>
      <title>Streamline ADAL implementation: Extending SharePoint with the Microsoft Graph – Part 4</title>
      <link>https://juliemturner.net/post/extending-sharepoint-with-adal-and-the-microsoft-graph-api-part-4/</link>
      <pubDate>Wed, 30 Aug 2017 13:25:59 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/extending-sharepoint-with-adal-and-the-microsoft-graph-api-part-4/</guid>
      <description>Introduction When I last left you (in Part 3) we had completed the round-trip journey that is learning all the facets to accessing the Microsoft Graph API (MSGraph) through an Azure Application and the ADAL.js library. A significant portion of our time was spent simply on the different ways to leverage ADAL.js depending on the framework you were using. In this next installment we&amp;rsquo;re going to go one step further and streamline our implementation of ADAL, in AngularJS specifically, but with broader implications to any web based framework.</description>
    </item>
    
    <item>
      <title>Creating a property pane for editing items in your SPFx web parts</title>
      <link>https://juliemturner.net/post/edit-item-property-pane/</link>
      <pubDate>Mon, 17 Jul 2017 12:34:43 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/edit-item-property-pane/</guid>
      <description>It’s a great privilege and great fun to work with the exceptional team at Shire now part of Takeda that’s building a bleeding edge intranet to support their now 24,000 employees and growing. The team is exploring some very new territory and learning a lot along the way. During last weeks webinar, Microsoft’s Mark Kashman promised we’d post some of the lessons learned in the project. It’s my pleasure to share with the greater world a tidbit of that knowledge in the form of how to create a property pane for an individual item, not just the web part using the SharePoint Framework (SPFx).</description>
    </item>
    
    <item>
      <title>SharePoint &#43; Flow (&#43; Azure Functions): Launching a Microsoft Flow from Client-Side Code</title>
      <link>https://juliemturner.net/post/launch-power-automate-with-code/</link>
      <pubDate>Wed, 05 Jul 2017 20:29:23 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/launch-power-automate-with-code/</guid>
      <description>The requirement seemed deceptively simple… and it was, somewhat… simple. I&amp;rsquo;ll start with showing you how very simple it is to launch a Microsoft Flow (&amp;ldquo;flow&amp;rdquo;) from your client-side code hosted, well… wherever. I will give you this caveat, launching a flow this way requires no authentication. The URL is entirely obscure, but if you’re concerned that the flow you’re starting does something you only want to allow authenticated users in your organization to do then you may want to rethink this.</description>
    </item>
    
    <item>
      <title>Greetings from New Hampshire, Where I’m Co-Authoring a Document</title>
      <link>https://juliemturner.net/post/coauthoring-a-document/</link>
      <pubDate>Fri, 03 Feb 2017 16:05:47 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/coauthoring-a-document/</guid>
      <description>As Marc said in his post on this experience, which of course he published before me, he and I needed to do some work on a Word document together today. We started by emailing, but almost immediately realized we should just share it on our OneDrive. I was in browser at the time, but have since continued to co-author it in Word on my desktop. I’m not going to lie, I’ve had problems with the co-authoring experience in the past, but was keeping an open mind since Marc and I recently “upgraded” (not sure that’s the right word) to the “First Release for Current Channel (Office Insider Slow)” version of Office 2016.</description>
    </item>
    
    <item>
      <title>Getting Results: Extending SharePoint with ADAL and the Microsoft Graph API - Part 3</title>
      <link>https://juliemturner.net/post/extending-sharepoint-with-adal-and-the-microsoft-graph-api-part-3/</link>
      <pubDate>Tue, 31 Jan 2017 14:56:05 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/extending-sharepoint-with-adal-and-the-microsoft-graph-api-part-3/</guid>
      <description>Introduction In Part 1, I discussed the background and setup information you would need to successfully embark on a client site widget for SharePoint that accesses the Microsoft Graph API (MSGraphAPI). In Part 2, we went in depth to the various ways of utilizing the adal.js and adal-angular.js libraries for authentication. Now, here in Part 3 we’re going to get right into the nuts and bolts of a real solution that does the following:</description>
    </item>
    
  </channel>
</rss>
