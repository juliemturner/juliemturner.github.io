<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SharePoint Framework on Veni, Vidi, Vici</title>
    <link>https://juliemturner.net/tags/sharepoint-framework/</link>
    <description>Recent content in SharePoint Framework on Veni, Vidi, Vici</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>julie.turner@sympraxisconsulting.com (Julie Turner)</managingEditor>
    <webMaster>julie.turner@sympraxisconsulting.com (Julie Turner)</webMaster>
    <copyright>Julie Turner ~ All rights reserved</copyright>
    <lastBuildDate>Thu, 05 Jan 2023 21:22:00 +0000</lastBuildDate><atom:link href="https://juliemturner.net/tags/sharepoint-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Console Log Better Practices with PnPjs V3</title>
      <link>https://juliemturner.net/post/better-practices-console-log-pnpjs/</link>
      <pubDate>Sat, 27 May 2023 09:51:56 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/better-practices-console-log-pnpjs/</guid>
      <description>I was recently asked by a conference attendee to help him understand when to use the @pnp/logging package that we ship with PnPjs.
This is an excellent question, and I&amp;rsquo;ve addressed it somewhat before in a previous post called Resolve to Log. All of the guidance I included about the package in that post still applies, however the examples references V2 of the library. To recap there is the ability to create a ConsoleLogger, a FunctionalLogger, or a custom listener class and then register that listener to the PnPjs timeline via the PnPLogging behavior.</description>
    </item>
    
    <item>
      <title>SharePoint Framework Application Customizer Cross-Site Page Loading</title>
      <link>https://juliemturner.net/post/spfx-appcustomizer-pageloading/</link>
      <pubDate>Thu, 05 Sep 2019 13:21:48 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/spfx-appcustomizer-pageloading/</guid>
      <description>I suspect, like Elio Struyf and Velin Georgiev before him, we&amp;rsquo;re all suffering from PTSD trying to properly load an application customizer into modern pages. It all started with an issue posted in the sp-dev-docs repo that was about partial page load across site collections but devolved into and issue with the OnInit function firing multiple times. Velin’s post describing his solution to the issue starts with a masterful breakdown of the page loading cycle and his need to track page hits.</description>
    </item>
    
    <item>
      <title>Using CSS Variables to Morph Your SPFx Design at Run Time</title>
      <link>https://juliemturner.net/post/using-css-variables/</link>
      <pubDate>Thu, 13 Jun 2019 16:16:33 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/using-css-variables/</guid>
      <description>I learned about CSS Variables from Stefan Bauer and his post CSS Variables support for SPFx projects through spfx-uifabric-themes. In a nutshell, this npm package, which I’ve started using regularly, transforms the current theme colors available to the SPFx web part into variables that can be used within your SCSS/CSS files. This intrigued me as it’s a native browser capability that&amp;rsquo;s been around since 2015 and because it means that you can affect the styling at run-time vs build-time… which translated means that lots of things you would normally think you’d need script for you can now do with a crafty use of CSS and some variables.</description>
    </item>
    
    <item>
      <title>Tip: How to use &#39;npm version&#39; to create a version tag for your source code</title>
      <link>https://juliemturner.net/post/npm-version-tag/</link>
      <pubDate>Mon, 08 Apr 2019 23:33:40 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/npm-version-tag/</guid>
      <description>I love the new feature I picked up from my friend Stefan Bauer about using npm version to upgrade the version of your SPFx solution. It has made working as an individual and as a team contributor so much easier because it becomes obvious in your repositories history when versions of the project we&amp;rsquo;re created and by whom.
I was struggling though because some of my more complicated projects, although set up the same way, were functioning with the exception that the git tags were not getting being created.</description>
    </item>
    
    <item>
      <title>Resolve to Log</title>
      <link>https://juliemturner.net/post/resolve-to-log/</link>
      <pubDate>Mon, 31 Dec 2018 18:51:56 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/resolve-to-log/</guid>
      <description>This post has been updated in a more recent post Console Log Better Practices with PnPjs V3.My Sympraxis partner Marc Anderson mentioned that we’ve been talking about PnPJS packages for SharePoint Framework a lot lately and called out that I would be blogging about utilizing the logging package in his post Using PnPJS and Async/Await to Really Simplify Your API Calls. If you haven’t checked it out and aren’t using PnPJS and the Async/Await method instead of Promises in your SharePoint Framework solutions, you should give it a read.</description>
    </item>
    
    <item>
      <title>SPFx Anchor Tags - Hitting the Target</title>
      <link>https://juliemturner.net/post/spfx-anchor-tags/</link>
      <pubDate>Wed, 08 Aug 2018 18:17:18 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/spfx-anchor-tags/</guid>
      <description>If you’re developing SharePoint Framework web parts you may have run across an issue whereby your anchor tags will not honor the target=”_blank” attribute allowing you to open a url in a new browser tab. The issue manifests itself only when your goal is to open another SharePoint page from a SharePoint page, i.e. the href is in the SharePoint domain. The reason for this is SharePoint’s built in but rather complex Page Router.</description>
    </item>
    
    <item>
      <title>Tip: Implementing &#39;Nav&#39; Office Fabric UI React Component</title>
      <link>https://juliemturner.net/post/nav-officeui-fabric-component/</link>
      <pubDate>Tue, 31 Jul 2018 23:55:05 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/nav-officeui-fabric-component/</guid>
      <description>This post is meant to be a quick supplement to the documentation provided by Microsoft around the Nav component of the Fluent UI. This Nav component gives you a control that you either create URL links or maybe more commonly, support navigation via code. For general links, where the URL is either a route or some other page, the implementation of the INavLinkGroup[] and INavLink is quite straight forward, just provide a Key, Name, and URL with a couple other optional parameters.</description>
    </item>
    
    <item>
      <title>Creating a property pane for editing items in your SPFx web parts</title>
      <link>https://juliemturner.net/post/edit-item-property-pane/</link>
      <pubDate>Mon, 17 Jul 2017 12:34:43 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/edit-item-property-pane/</guid>
      <description>It’s a great privilege and great fun to work with the exceptional team at Shire now part of Takeda that’s building a bleeding edge intranet to support their now 24,000 employees and growing. The team is exploring some very new territory and learning a lot along the way. During last weeks webinar, Microsoft’s Mark Kashman promised we’d post some of the lessons learned in the project. It’s my pleasure to share with the greater world a tidbit of that knowledge in the form of how to create a property pane for an individual item, not just the web part using the SharePoint Framework (SPFx).</description>
    </item>
    
    <item>
      <title>Enter key gone bad</title>
      <link>https://juliemturner.net/post/enter-key-gone-bad/</link>
      <pubDate>Fri, 18 Mar 2016 16:12:50 +0000</pubDate>
      <author>julie.turner@sympraxisconsulting.com (Julie Turner)</author>
      <guid>https://juliemturner.net/post/enter-key-gone-bad/</guid>
      <description>This morning I had an issue trying to implement a Phone Directory on a client’s home page. The UI incorporated a First Name and a Last Name input box and a “Go” button. But as we all know, users like to hit Enter, and we all want to try and support the best user experiences we can. However, SharePoint&amp;rsquo;s default implementation of the Enter key can sometimes put the page in edit mode…</description>
    </item>
    
  </channel>
</rss>
